#!/bin/bash

#       *-------------------------------------------*
#       | Updates the "cookie_index" by associating |
#       | cookies with corresponding cows.          |
#       | Current complexity: Î¸( #cookies * #cows ) |
#       *-------------------------------------------*
#               o   ^__^
#                o  (OO)\_______
#                   (__)\       )\/\
#                       ||----w |
#                       ||     ||

for cow in $(ls cows)
do
  cow=$(echo "$cow" | cut -f 1 -d '.')
  cow_cookies=$(cat "cows/$cow.cow" | tail -1)
  for cookie in $(echo "$cow_cookies" | sed "s/,/ /g")
  do
    # Ignore end of file delimiters
    if [ "$cookie" == "EOC" ] || [ "$cookie" == "EOF" ]; then
      continue
    fi

    if ! grep -q "$cookie" cookie_index
    then
      # We didn't find the "$cookie", hence append it
      sed -i "\$a$cookie" cookie_index
    fi

    # Retrieve ',' delimited "$cow_cookies" from cookie_index, and see if "$cow" is present
    while read -r cookie_line
    do
      flag=0    # Flipped if "$cookie" in "cookie_index" already contains the "$cow"
      for new_cookie in $(echo "$cookie_line" | sed "s/,/ /g")
      do
        if [ "$cow" == "$new_cookie" ]; then
          flag=1
          break
        fi
      done

      if [ $flag -eq 0 ]; then
        # We didn't find the "$cow", hence append it to the respective "$cookie"
        sed -i "/$cookie/ s/$/,$cow/" cookie_index
      fi

    done < <(grep "$cookie" cookie_index)
  done
done
